name: Deploy Demo Page

on:
  # 手动触发
  workflow_dispatch:

  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'public/**'
      - 'index.html'
      - 'vite.config.ts'
      - 'package.json'
      - '.github/workflows/deploy-demo.yml'
      - '!**.md'
      - '!.gitignore'
      - '!.editorconfig'
      - '!LICENSE'

jobs:
  build-and-deploy:
    # 只在手动触发或提交信息包含[deploy]时运行
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[deploy]')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      # 在 CI 环境中使用 npm 官方源，并添加网络优化配置
      - name: Configure npm for CI
        run: |
          echo "registry=https://registry.npmjs.org/" > .npmrc
          echo "strict-ssl=true" >> .npmrc
          echo "fetch-retries=5" >> .npmrc
          echo "fetch-retry-factor=2" >> .npmrc
          echo "fetch-retry-mintimeout=10000" >> .npmrc
          echo "fetch-retry-maxtimeout=60000" >> .npmrc
          echo "network-timeout=300000" >> .npmrc

      - name: Install Dependencies
        run: |
          # 清理可能的损坏缓存
          npm cache clean --force
          # 重试机制，最多重试3次
          for i in {1..3}; do
            echo "尝试安装依赖 (第 $i 次)..."
            if npm ci --verbose; then
              echo "依赖安装成功"
              break
            else
              echo "第 $i 次安装失败"
              if [ $i -eq 3 ]; then
                echo "安装失败，已达到最大重试次数"
                exit 1
              fi
              # 等待后重试
              sleep 10
              # 清理 node_modules 和 package-lock.json 后重试
              rm -rf node_modules package-lock.json
              npm cache clean --force
            fi
          done

      # 类型检查可选，如果当前有类型错误可以暂时注释掉
      # - name: Type Check
      #   run: npm run type-check

      - name: Build Demo
        run: npm run build:demo

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.DEPLOY_KEY }}
          publish_dir: ./demo-dist
          force_orphan: true

      # 工作流完成后恢复原始 .npmrc
      - name: Restore original .npmrc
        if: always()
        run: |
          if [ -f .npmrc.backup ]; then
            mv .npmrc.backup .npmrc
          fi
