name: NPM Publish

on:
  release:
    types: [created]
  push:
    branches:
      - master
      - 'v*'
    paths:
      - '.github/workflows/npm-publish.yml'  # 添加对自身文件的监听
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (eg: 1.0.0)'
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      # 在 CI 环境中使用 npm 官方源，并添加网络优化配置
      - name: Configure npm for CI
        run: |
          echo "registry=https://registry.npmjs.org/" > .npmrc
          echo "strict-ssl=true" >> .npmrc
          echo "fetch-retries=5" >> .npmrc
          echo "fetch-retry-factor=2" >> .npmrc
          echo "fetch-retry-mintimeout=10000" >> .npmrc
          echo "fetch-retry-maxtimeout=60000" >> .npmrc
          echo "network-timeout=300000" >> .npmrc

      - name: Install dependencies
        run: |
          # 清理可能的损坏缓存
          npm cache clean --force
          # 重试机制，最多重试3次
          for i in {1..3}; do
            echo "尝试安装依赖 (第 $i 次)..."
            if npm ci --verbose; then
              echo "依赖安装成功"
              break
            else
              echo "第 $i 次安装失败"
              if [ $i -eq 3 ]; then
                echo "安装失败，已达到最大重试次数"
                exit 1
              fi
              # 等待后重试
              sleep 10
              # 清理 node_modules 和 package-lock.json 后重试
              rm -rf node_modules package-lock.json
              npm cache clean --force
            fi
          done

      - name: Build
        run: npm run build

      - name: Update version
        if: github.event_name == 'workflow_dispatch'
        run: npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # 工作流完成后恢复原始 .npmrc
      - name: Restore original .npmrc
        run: |
          if [ -f .npmrc.backup ]; then
            mv .npmrc.backup .npmrc
          fi
